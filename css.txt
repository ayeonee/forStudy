p.47 CSS
CSS : Cascading Style Sheets. 스타일=웹 페이지와 관련도니 스타일 지칭. Cascade=스타일이 적용될 때 우선순위를 가지고 순차 적용 됨.
선택자(Selector) : HTML의 일반적인 태그를 가리키고 있는 이름. 선택자는 일종의 연결 통로. 
	스타일을 지정할 특정 HTML 요소를 선택하는 역할 수행. 
	html의 id 이름을 css에 연결하려면, css에 선택자를 #id이름 으로 하면됨.
속성(Property) : HTML의 속성은 attribute(구분하기), 지정 또는 변경하고 싶은 스타일 속성의 이름.
	font-family, font-size, color, background, position 등 다양한 요소 사용 가능.
값(Value) : CSS에 정의된 특정 키워드(blue, block 등)와 수치와 특정 단위(px, %, em, rem, vh, vw 등)로 나뉨.
	프로퍼티와 짝을 이루어 사용. 
선언 블록(Declaration Block) : 선택자 뒤에 위치한 {} 안의 한 블록 또는 덩어리.
	선언 : 프로퍼티와 값의 짝. (ex. font-size: 16px;), 세미콜론 필수

**css를 html에 적용하기**
1. HTML 문서 안에 스타일 코드를 넣는 방법 : <style>과 </style> 안에 CSS코드 넣기.
	보통 <head>, </head>사이에 넣으나 HTML 문서의 어디에 넣어도 적용. 또다른 HTML 문서에는 적용 불가.
2. 별도의 CSS파일과 HTML문서 연결하는 방법 : 적용을 원하는 HTML 문서에 코드 추가.
	<link rel="stylesheet" href="css파일이름.css">
	+HTML과 CSS파일이 같은 폴더에 있다고 가정했을 때 코드이고 경로는 적절히 수정해야함.

p.48 선택자
CSS에서는 , 로 선택자 여러개의 스타일을 한꺼번에 지정할 수 있음.

p.49 CSS의 기본 단위 : 값에 들어갈 수 있는 것
크기 단위 : 글자 사이즈, 높이나 너비를 정하는 등 크기와 관련된 값을 조정할 때. 크기 단위를 이용하여 수치 조정
	고정 크기 단위 : px(웹에서 대표적으로 쓰임), pt, in, cm, mm (차례대로 픽셀, 포인트, 인치, 센티미터, 밀리미터)
		픽셀: CSS에서 쓰는 1px은 정해진 절대 길이로 쓰임. (장치의 해상도에 따라 다른 크기를 갖기 때문에 브라우저에서의 1px을 1/96 inch로 고정 해둠)
	가변 크기 단위 : em, %, rem, vw, vh, vmin, vmax, ex 
		(차례대로 배수 단위(부모의 글자크기에 따라 기준점 달라짐.), 백분율 단위, 배수 단위(최상위 요소의 글자크기에 따라 달라짐.)	, 화면비 백분율 단위(w,h), 화면비 최솟값, 화면비 최댓값, 현재 폰트의 x-height 값)
		em, rem은 모두 상대적인 길이. em은 현재 스타일이 지정되는 요소의 폰트 크기 기준, rem은 최상위 요소의 폰트 크기 기준.
		%는 기준이 되는 상위 요소의 font-size 기준이 아닌 너비,높이,폰트 크기 등 각각의 프로퍼티 값의 상대적인 값을 가짐.
	웹 브라우저는 기본적으로 16px을 기본으로 font-size 갖음. 
	다양한 사이즈의 브라우저 환경이 하나로 정형화 되지 않거나 웹 페이지를 확대,축소 해야할 때 이에 반응하는 웹을만들려면 상대 길이를 사용해야 함.
	+반응형 웹(Responsive Web) : 기기에 따라 반응하는 웹. em보단 rem을 사용하길 권장.

p.50 CSS의 색상: 키워드, hex code, rgb
키워드 : 색을 지정하는 가장 간단한 방법. 내부적으로 지정되어있는 키워드를 사용. 140가지 색상 지원. (https://www.w3schools.com/colors/colors_names.asp)
RGB : r,g,b 0~255까지. rgb(0,0,0)으로 나타냄. +alpha값은 0~1
HEX Code : 16진수 6자리 코드. 2자리씩 r,g,b값 나타냄. +alpha 값은 2자리 추가하여 표현 0~100.

p.53 선택자 - <단순 선택자>
타입 선택자(Type Selector) : 해당 태그를 가지는 모든 요소에 스타일을 적용. 선택자 자리에 태그를 넣으면 태그에 해당하는 모든 요소에 스타일이 적용.
	p{ color : red; }
아이디 선택자(ID Selector) : 아이디 이름으로 스타일을 적용. HTML 내에서 중복된 아이디는 존재할 수 없음. 아이디 속성을 이용하고 #과 지정할 id를 함께 사용함.
	#groom { background-color : blue; }
클래스 선택자(Class Selector) : 클래스(비슷한 특징을 가지는 요소들에게 지정하는 속성) 속성을 선택자로 사용하여 스타일을 적용. .과 지정할 class를 함께 사용.
	.mafia{ color : white; }
	+클래스는 비슷한 스타일을 묶어 스타일을 적용시키고 싶을 때 많이 사용.
전체 선택자(Universal Selector) : 모든 요소에 스타일을 적용. 모든 요소에 적용시키기 때문에 속도가 저하될 수 있음. 선택자 자리에 * 입력.
	* { color : yellow; }
속성 선택자(Attribute Selector) : 특정 HTML 속성을 가지고 있는 모든 요소에 스타일을 적용. 선택자 오른쪽에 []로 속성과 속성 값 작성.
	a[target="_blank"]{ color : red; }

p.54 선택자 - <복합 선택자>
부모-자식-후손 요소 : 부모(article)와 나(div), 자식(p) 이라고 가정. 부모-자식 관계는 상대적(<p> 기준으로 <div>가 부모)
	<article>
	부모 요소
	<div>
		나
		<div>자식 요소 1</div>
		<p>자식 요소 2</p>
		<div>자식 요소 3</div>
	</div>
	</article>
부모 요소(Parent Element) : <div>의 상위 요소인 article은 <div>의 부모요소.
자식 요소(Child Element) : <div>안에 포함되는 하위요소인 <p>, <div>는 <div>의 자식요소.
후손 요소(Descendant Element) : 부모 아래의 모든 하위 요소.
-->HTML의 부모-자식-후손 관계에 따라 CSS에서 또한 자식과 후손과 연관된 선택자인 자식 선택자, 후손 선택자를 사용.

자식 선택자(Child Selector) : 선택자 A의 모든 자식 중 선택자 B와 일치하는 요소를 선택. 선택자를 두개 사용하고 >를 써줌.
	바로 하위에 해당하는 자식 요소에만 스타일을 적용하고 싶을 때 자식 선택자를 사용.
	선택자A > 선택자B { color : green; }
후손 선택자(Descendant Selector) : 선택자A의 모든 후손 중 선택자 B와 일치하는 요소를 선택. 선택자를 두개 사용하고 띄어쓰기를 써줌.
	선택자A 선택자B { color : yellow; }

p.55 선택자 - <가상 클래스 선택자>
가상 클래스(Pseudo-class) : 클래스와 달리 직접 정의할 수 없고 실제 HTML에 보이지 않음.
선택자에 가상 클래스를 붙여 가상 클래스 선택자로 이용.
	선택자:pseudo-class{ color:red; }
대표적인 가상 클래스 : 링크 태그와 관련된 가상 클래스
	a:link (방문하지 않은 링크일 때)
	a:visited (방문한 링크일 때)
	a:hover (링크에 마우스를 올렸을 때)
	a:active (선택된 링크일 때)

p.58 Box 모델
HTML의 모든 요소가 상자 형태를 가진다 = 브라우저에 출력되는 컨텐츠가 사각형 박스 형태로 출력.
박스모델 : 내용(Content) + 패딩(Padding) + 경계선(Border) + 마진(Margin)
	내용 : 이미지나 텍스트같이 코드 상에서 태그 사이에 담은 내용. 실제로 담고 있는 부분
	경계선 : 내용(content)을 감싸고 있는 테두리
	패딩 : 컨텐츠와 경계선 사이의 여백
	마진 : 경계선 밖의 여백

p.59 content
width, height : 너비와 크기는 box 모델 중 content의 크기에 해당. 컨텐츠 영역의 크기가 지정되어 있는 상태에서 컨텐츠의 크기를 늘리면 컨텐츠 박스를 벗어남.
	컨텐츠 박스의 내용이 컨텐츠 박스에 지정된 크기보다 크더라도 컨텐츠 박스를 기준으로 배치됨. (마진, 패딩 등이 없는 경우)

p.60 border
border-style : 선의 스타일, 선의 종류를 지정함. (none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset | initial | inherit)
	자주 사용하는 4가지 : 실선(solid), 파선(dashed), 점선(dotted), 이중선(double)
	네 방향의 스타일을 동시에 적용하면 top, right, bottom, left의 순서로 스타일 지정.
	방향을 지정하는 프로퍼티(ex. border-top-style : solid;)와 함께 사용하지 않는 이상, 사용하는 개수에 따라 적용되는 스타일의 위치가 달라짐.

border-width, border-color : 선의 두께와 색 지정. body-style 없이 지정했을 땐 적용되지 않음.
	style과 마찬가지로 사용하는 개수에 따라 적용되는 위치가 달라지고, 위치를 지정하여 따로 스타일 지정 가능

shortcut 속성 : border 프로퍼티는 shortcut으로 한번에 지정 가능. 
	border : red solid 1px;
	border-bottom : red solid 1px; (한 면만 지정하고 싶으면)

border-radius : border로 만든 경계선을 둥글게 표현할 때 사용. 테두리 존재 여부와 별개로 전체 background에 적용됨. 원이나 모서리가 둥근 사각형을 만들고 싶다면 border 없이 border-radius 이용.
	border-radius : 12px; (여기서 px은 모서리 반지름의 값)
+shortcut 이용하여 한번에 지정하거나 네 방향으로 나누어 부분적용 가능.
+타원형의 radius 적용 : 가로 반지름 적고 세로 반지름 적음. (ex. 24px 12px)
+네 모서리에 모두 적용하고 싶다면 /로 구분. (ex. border-radius: 8px 16px 24px 36px / 36px 24px 16px 8px;) 

p.61 padding과 margin
border 기준으로 경계선 내부 여백을 패딩(padding), 경계선 외부 여백을 마진(margin).
네 방향 따로 혹은 한꺼번에 모두 적용 가능.
	margin : 12px 24px 32px 63px; /*상 우 하 좌*/
	padding : 6px 12px 24px 32px; /*상 우 하 좌*/

마진 상쇄 : 위 아래로 맞닿은 두 요소 사이 마진은 더 큰쪽을 기준으로 결정. 두 요소에 각각 마진을 적용하더라도 서로 맞닿아 있다면 마진이 따로 존재하지 않음.

box-sizing : content-box; --> content-box 기준으로 크기를 정함.
box-sizing : border-box; --> border 바로 전 padding까지를 기준으로 정함.
즉, 기본 값인 content-box의 width 값은 컨텐츠만의 사이즈. border-box는 컨텐츠의 크기와 패딩까지 합한 값.